<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzw.dao.UserDao">
    <!--id:表示UserDao中的方法名  resultType: 表示将结果集封装到哪个里面去-->
    <select id="findAll" resultType="com.zzw.domain.User">
        select * from user ;
    </select>

    <insert id="insertInfo" parameterType="com.zzw.domain.User">
        insert into user(user_name,user_password) value (#{user_name},#{user_password})
    </insert>

    <update id="updateInfo" parameterType="com.zzw.domain.User">
        update user set user_name=#{user_name},user_password=#{user_password} where id=#{id}
    </update>

    <!--下面的uid可以是任意名-->
    <delete id="deleteInfoById" parameterType="Integer">
        delete from user where id=#{uid}
    </delete>

    <select id="findInfoById" parameterType="Integer" resultType="com.zzw.domain.User">
        select * from user where id = #{uid}
    </select>

    <!--根据姓名模糊查询-->
    <select id="findInfoByName" parameterType="String" resultType="com.zzw.domain.User">
        select * from user where user_name like #{username}
    </select>

    <!--查询用户表的总个数-->
    <select id="findCountUser" resultType="Integer">
        select count(*) from user
    </select>

    <!-- 查询插入的id名 -->
    <insert id="findAllGetID" parameterType="com.zzw.domain.User">
        <!--
                keyProperty="id" 表示实体类的id       keyColumn="id"  表示表的id
                resultType="int"                    结果集为:int类型
                   order="AFTER"  表示在之后执行
        -->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            <!-- 表示查询插入后的id名 -->
            select last_insert_id()
        </selectKey>
        insert into user(user_name,user_password) value (#{user_name},#{user_password})
    </insert>
</mapper>