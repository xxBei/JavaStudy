<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--spring的入门配置-->
    <!--
        IOC 和 DI 的区别
            IOC 控制反转: 将对象的创建权交给了Spring (通俗说,是将类交给了Spring管理了)
            DI  依赖注入: 必须拥有IOC环境,Spring在管理这个类的时候,将类的依赖的属性注入(设置)进来。
                （在Spring管理这个类的时候，将类的属性给设置进来）。
    -->

    <!--
        id: 名字任意起,只需要在 applicationContext.getBean("userDao");写入id名即可（id可以和name互换使用）
            注意：
                id：  是唯一的,不能出现特殊字符
                name: 理论是唯一,可以出现特殊字符
        class: 需要实现功能的类名
    -->
    <bean id="userDao" class="com.zzw.spring.test.Impl.UserDaoImpl">
        <!--将类的name属性设置进来-->
        <property name="name" value="李四"/>
    </bean>


    <!-- Spring的属性注入的方式 -->
    <!-- 构造方法的方式 -->
    <bean id="Car1" class="com.zzw.spring.test1.Car1">
        <constructor-arg index="0" value="宝马"/>
        <constructor-arg index="1" value="400000"/>
    </bean>

    <!-- set方法的方式 -->
    <!--<bean id="Car2" class="com.zzw.spring.test1.Car2">
        <property name="name" value="玛莎拉蒂"/>
        <property name="price" value="8000000"/>
    </bean>-->

    <!-- set方法注入对象的方式 -->
    <!--<bean id="Car3" class="com.zzw.spring.test1.Car3">
        &lt;!&ndash;
            value用于注入普通方式
            ref用于设置其他类的id或name
        &ndash;&gt;
        <property name="name" value="刘备"/>
        <property name="car2" ref="Car2"/>
    </bean>-->

    <!--
        使用p名称空间的方式属性注入
        要使用p名称空间需要在约束里面写入下面这句话:
             xmlns:p="http://www.springframework.org/schema/p"
    -->
    <!-- set方法的方式 -->
    <bean id="Car2" class="com.zzw.spring.test1.Car2" p:name="大众polo" p:price="100000"></bean>
    <!-- set方法注入对象的方式 -->
    <bean id="Car3" class="com.zzw.spring.test1.Car3" p:name="章凡" p:car2-ref="Car2"></bean>
</beans>